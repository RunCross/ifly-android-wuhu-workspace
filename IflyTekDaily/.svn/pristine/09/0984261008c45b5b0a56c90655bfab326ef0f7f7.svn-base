package com.firstgroup.iflytekdaily.work;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.firstgroup.iflytekdaily.R;
import com.firstgroup.iflytekdaily.bean.Daily;
import com.firstgroup.iflytekdaily.main.DailyWriteActivity;
import com.firstgroup.iflytekdaily.util.HttpClientUtil;
import com.firstgroup.iflytekdaily.util.Session;
import com.firstgroup.iflytekdaily.work.CalendarView.OnItemClickListener;
import com.iflytek.speech.RecognizerResult;
import com.iflytek.speech.SpeechError;
import com.iflytek.speech.SpeechConfig.RATE;
import com.iflytek.ui.RecognizerDialog;
import com.iflytek.ui.RecognizerDialogListener;

import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.text.SpannableString;
import android.text.Spanned;
import android.text.method.LinkMovementMethod;
import android.text.style.ClickableSpan;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.View.OnClickListener;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
/**
 * 主界面的Fragment，包含一个日历控件
 * @author Administrator
 *
 */
public class DailyMainFragment extends Fragment {
	private TextView linkText;
	private TextView dateText;// 日期显示文本
	private ImageButton nextMouthBtn;// 下个月
	private ImageButton lastMouthBtn;// 上个月
	private CalendarView calendarView;

	private TextView welcomeView;
	private TextView showTodayDate;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		View view = inflater.inflate(R.layout.dailymainfragment, null);
		linkText = (TextView) view.findViewById(R.id.linkText);
		dateText = (TextView) view.findViewById(R.id.dateText);
		Calendar calendar = Calendar.getInstance();
		welcomeView = (TextView) view.findViewById(R.id.userNameText);
		showTodayDate = (TextView) view.findViewById(R.id.show_today_date);
		int month = calendar.get(calendar.MONTH)+1;
		showTodayDate.setText(calendar.get(calendar.YEAR)+"/"+month+"/"+calendar.get(calendar.DAY_OF_MONTH));
		welcomeView.setText("欢迎您： "+(String)Session.get("Name"));
		nextMouthBtn = (ImageButton) view.findViewById(R.id.nextMouthBtn);
		lastMouthBtn = (ImageButton) view.findViewById(R.id.lastMouthBtn);
	
		if(isHadWriteToday()){
			linkText.setText(getClickableSpan1());
		}else{
			linkText.setText(getClickableSpan());
		}
		linkText.setMovementMethod(LinkMovementMethod.getInstance());
		calendarView = (CalendarView) view.findViewById(R.id.myGridView);
		nextMouthBtn.setOnClickListener(clickListener);
		lastMouthBtn.setOnClickListener(clickListener);
		calendarView.setOnItemClickListener(new CalendarItemClickListener());		
		return view;
	}

	// 按钮点击监听
	private OnClickListener clickListener = new OnClickListener() {
		@Override
		public void onClick(View v) {
			switch (v.getId()) {
			case R.id.nextMouthBtn:
				calendarView.clickRightMonth();
				String dt = calendarView.getYearAndmonth();
				dateText.setText(dt + "-01");
				break;
			case R.id.lastMouthBtn:
				calendarView.clickLeftMonth();
				String dt2 = calendarView.getYearAndmonth();
				dateText.setText(dt2 + "-01");
				break;
			default:
				break;
			}

		}
	};;

	/**
	 *  设置超链接文本,提示填写日报
	 * 
	 */
	private SpannableString getClickableSpan() {

		OnClickListener listener = new OnClickListener() {

			@Override
			public void onClick(View v) {
				Intent intent=getWriteIntent(1,"");
		    	startActivityForResult(intent, 0);
			}
		};
		SpannableString spanableInfo = new SpannableString("你今天还未填日报哦！点击这里填写");
		int start = 12;
		int end = 14;
		spanableInfo.setSpan(new Clickable(listener), start, end,
				Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
		return spanableInfo;
	}
    
	/**
	 *  设置超链接文本,提修改日报
	 * 
	 */
	private SpannableString getClickableSpan1() {

		OnClickListener listener = new OnClickListener() {

			@Override
			public void onClick(View v) {
				Intent intent=getWriteIntent(1,"");		
				
	
		    	startActivityForResult(intent, 0);
			}
		};
		SpannableString spanableInfo = new SpannableString("你今天已填写日报！点击此处修改");
		int start = 13;
		int end = 15;
		spanableInfo.setSpan(new Clickable(listener), start, end,
				Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
		return spanableInfo;
	}
	
	
	
	/**
	 * 日历日期单击事件
	 * 
	 * @author Administrator
	 * 
	 */
	class CalendarItemClickListener implements OnItemClickListener {
		@Override
		public void OnItemClick(Date date) {
			// 转化Date日期格式为年-月-日
			SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
			String da = dateFormat.format(date);
			dateText.setText(da);
			Map<String, Integer> calList = (Map<String, Integer>) Session
	                  .get("calList");
				Calendar calendar = Calendar.getInstance();
				String todayStr = calendar.get(Calendar.YEAR) + "-"
						+ (calendar.get(Calendar.MONTH) + 1) + "-"
						+ calendar.get(Calendar.DAY_OF_MONTH);

				calendar.setTime(date);
				String dateStr;//被点击的日期
				dateStr = calendar.get(Calendar.YEAR) + "-"
						+ (calendar.get(Calendar.MONTH) + 1) + "-"
						+ calendar.get(Calendar.DAY_OF_MONTH);
				//判断是否写今日日报
			    if(dateStr.equals(todayStr)){
			    	
			    	Intent intent=getWriteIntent(1,"");
			    	startActivityForResult(intent, 0);
			    }
			    else if (calList.containsKey(dateStr) && calList.get(dateStr) == 1) {
			    	Intent intent=new Intent(getActivity(),
							DailyWriteActivity.class);
			    	intent.putExtra("IsHadWrite", "1");
			    	intent.putExtra("Date",dateStr);
			    	startActivityForResult(intent, 0);
					
				}else if(calList.containsKey(dateStr)){
					
					Intent intent=getWriteIntent(2,dateStr);
		            
			    	intent.putExtra("Date",dateStr);
			    	startActivityForResult(intent, 0);
				}
		}
	}

	

	/**
	 * 超链接文本点击监听类
	 * 
	 * @author Administrator
	 * 
	 */
	class Clickable extends ClickableSpan implements OnClickListener {
		private final View.OnClickListener mListener;

		public Clickable(View.OnClickListener l) {
			mListener = l;
		}

		@Override
		public void onClick(View v) {
			mListener.onClick(v);
		}
	}

	/**
	 * 获得今日日报信息
	 */
	private Map<String, String> getTodayDailyInfo() {
		String username = (String) Session.get("username");
		String key = (String) Session.get("key");
		Map<String, String> dailyInfoMap = null;
		String message = "?funID=" + 4 + "&username=" + username + "&key="+ key;
		try {
			String result=HttpClientUtil.getLoginUser(message);
//			System.out.println("result-->"+result);
			dailyInfoMap = HttpClientUtil.dairyTurnToJSon(result);
			 
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return dailyInfoMap;

	}
	
	/**
	 * 获得某一天报信息
	 */
	private Daily getOtherDailyInfo(String dateStr) {
		String username = (String) Session.get("username");
		String key = (String) Session.get("key");
		Daily daily=new Daily();
		String message = "?funID=" + 5 + "&username=" + username +"&startDate="+dateStr+"&endDate="+dateStr+"&count="+1+"&key="+ key;
		
		try {
			List<Daily> list;
			String result=HttpClientUtil.getLoginUser(message);
			list = HttpClientUtil.dairyReportSetTurnToJSon(result);
			if(list.size()>0){
				daily=list.get(0);
				
			}
			 
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return daily;

	}
	
	/**
	 * 重写该方法，以获取指定的Activity的返回结果
	 */
	@Override
	public void onActivityResult(int requestCode, int resultCode, Intent data) {
		if(requestCode==0&&requestCode==0){
			int code=data.getIntExtra("code",1);
			if(code==0){
			linkText.setText(getClickableSpan1());
			linkText.setMovementMethod(LinkMovementMethod.getInstance());
			calendarView.refreshCalenderView();
		
			}
		}
	}
     
	/**
	 * 判断今天是否写了日报
	 * @return
	 */
	private boolean isHadWriteToday(){
		
		Map<String, String> dailyInfoMap=getTodayDailyInfo();
  
		return !dailyInfoMap.isEmpty();

	}
	
	/**
	 * 获取填写今日日报的Intent
	 * @return intent
	 */
	private Intent getWriteIntent(int code,String dateStr){
		
		Calendar calendar = Calendar.getInstance();
		String todayStr = calendar.get(Calendar.YEAR) + "-"
				+ (calendar.get(Calendar.MONTH) + 1) + "-"
				+ calendar.get(Calendar.DAY_OF_MONTH);
		Map<String, String> dailyInfoMap = null;
		Daily daily = null;
		Intent intent=new Intent(getActivity(),
				DailyWriteActivity.class);
		if(code==1){
		dailyInfoMap=getTodayDailyInfo();
		if(!dailyInfoMap.isEmpty()){
			
	    	intent.putExtra("IsHadWrite", dailyInfoMap.get("IsHadWrite"));
	    	intent.putExtra("TodayJob", dailyInfoMap.get("TodayJob"));
	    	intent.putExtra("NeedCoordinate", dailyInfoMap.get("NeedCoordinate"));
	    	intent.putExtra("Date", todayStr);
	    	}else{
	    		intent.putExtra("IsHadWrite", "1");
	    		intent.putExtra("Date", todayStr);
	    	}
		}else if(code==2){
			daily=getOtherDailyInfo(dateStr);
			if(daily!=null){
				
		    	intent.putExtra("IsHadWrite", daily.getIsHadWrite());
		    	intent.putExtra("TodayJob", daily.getTodayJob());
		    	intent.putExtra("NeedCoordinate", daily.getNeedCoordinate());
		    	intent.putExtra("Date", todayStr);
		    	}else{
		    		intent.putExtra("IsHadWrite", "1");
		    		intent.putExtra("Date", todayStr);
		    	}
		}
    	

		return intent;
		
	}
}
