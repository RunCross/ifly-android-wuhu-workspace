package com.firstgroup.iflytekdaily.work;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Map;

import com.firstgroup.iflytekdaily.R;
import com.firstgroup.iflytekdaily.main.DailyWriteActivity;
import com.firstgroup.iflytekdaily.util.HttpClientUtil;
import com.firstgroup.iflytekdaily.util.Session;
import com.firstgroup.iflytekdaily.work.CalendarView.OnItemClickListener;
import com.firstgroup.iflytekdaily.work.CalendarView.OnLongItemClickListener;

import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.text.SpannableString;
import android.text.Spanned;
import android.text.method.LinkMovementMethod;
import android.text.style.ClickableSpan;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.View.OnClickListener;
import android.widget.ImageButton;
import android.widget.TextView;

public class DailyMainFragment extends Fragment {
	private TextView linkText;
	private TextView dateText;// 日期显示文本
	private ImageButton nextMouthBtn;// 下个月
	private ImageButton lastMouthBtn;// 上个月
	private CalendarView calendarView;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		View view = inflater.inflate(R.layout.dailymainfragment, null);
		linkText = (TextView) view.findViewById(R.id.linkText);
		dateText = (TextView) view.findViewById(R.id.dateText);
		nextMouthBtn = (ImageButton) view.findViewById(R.id.nextMouthBtn);
		lastMouthBtn = (ImageButton) view.findViewById(R.id.lastMouthBtn);
		linkText.setText(getClickableSpan());
		linkText.setMovementMethod(LinkMovementMethod.getInstance());
		calendarView = (CalendarView) view.findViewById(R.id.myGridView);
		nextMouthBtn.setOnClickListener(clickListener);
		lastMouthBtn.setOnClickListener(clickListener);
		calendarView.setOnItemClickListener(new CalendarItemClickListener());
		calendarView
				.setOnLongItemClickListener(new CalendarLongItemClickListener());
		return view;
	}

	// 按钮点击监听
	private OnClickListener clickListener = new OnClickListener() {
		@Override
		public void onClick(View v) {
			switch (v.getId()) {
			case R.id.nextMouthBtn:
				calendarView.clickRightMonth();
				String dt = calendarView.getYearAndmonth();
				dateText.setText(dt + "-01");
				break;
			case R.id.lastMouthBtn:
				calendarView.clickLeftMonth();
				String dt2 = calendarView.getYearAndmonth();
				dateText.setText(dt2 + "-01");
				break;
			default:
				break;
			}

		}
	};;

	// 设置超链接文本
	private SpannableString getClickableSpan() {

		OnClickListener listener = new OnClickListener() {

			@Override
			public void onClick(View v) {
				Intent intent=new Intent(getActivity(),
						DailyWriteActivity.class);
		    	intent.putExtra("IsHadWrite", "1");
				startActivity(intent);
			}
		};
		SpannableString spanableInfo = new SpannableString("你今天还未填日报哦！点击这里填写");
		int start = 12;
		int end = 14;
		spanableInfo.setSpan(new Clickable(listener), start, end,
				Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
		return spanableInfo;
	}

	/**
	 * 日历日期单击事件
	 * 
	 * @author Administrator
	 * 
	 */
	class CalendarItemClickListener implements OnItemClickListener {
		@Override
		public void OnItemClick(Date date) {
			// 转化Date日期格式为年-月-日
			SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
			String da = dateFormat.format(date);
			dateText.setText(da);
            
		}
	}

	class CalendarLongItemClickListener implements OnLongItemClickListener {

		@Override
		public void OnLongItemClick(Date date) {
			Map<String, Integer> calList = (Map<String, Integer>) Session
                  .get("calList");
			Calendar calendar = Calendar.getInstance();
			String todayStr = calendar.get(Calendar.YEAR) + "-"
					+ (calendar.get(Calendar.MONTH) + 1) + "-"
					+ calendar.get(Calendar.DAY_OF_MONTH);

			calendar.setTime(date);
			String dateStr = calendar.get(Calendar.YEAR) + "-"
					+ (calendar.get(Calendar.MONTH) + 1) + "-"
					+ calendar.get(Calendar.DAY_OF_MONTH);
			//判断是否写今日日报
		    if(dateStr.equals(todayStr)){
		    	Map<String, String> dailyInfoMap=getTodayDailyInfo();
		    	Intent intent=new Intent(getActivity(),
						DailyWriteActivity.class);
		    	System.out.println("Map.Size-->"+dailyInfoMap.size());
		    	if(!dailyInfoMap.isEmpty()){
		    	intent.putExtra("IsHadWrite", dailyInfoMap.get("IsHadWrite"));
		    	intent.putExtra("TodayJob", dailyInfoMap.get("TodayJob"));
		    	intent.putExtra("NeedCoordinate", dailyInfoMap.get("NeedCoordinate"));
		    	System.out.println("TodayJob-->"+dailyInfoMap.get("TodayJob"));
		    	System.out.println("NeedCoordinate-->"+dailyInfoMap.get("NeedCoordinate"));
		    	}else{
		    		intent.putExtra("IsHadWrite", "1");
		    	}
		    	
		    	startActivity(intent);
		    }
		    else if (calList.containsKey(dateStr) && calList.get(dateStr) == 1) {
		    	Intent intent=new Intent(getActivity(),
						DailyWriteActivity.class);
		    	intent.putExtra("IsHadWrite", "1");
				startActivity(intent);
				
			}

		}

	}

	/**
	 * 超链接文本点击监听类
	 * 
	 * @author Administrator
	 * 
	 */
	class Clickable extends ClickableSpan implements OnClickListener {
		private final View.OnClickListener mListener;

		public Clickable(View.OnClickListener l) {
			mListener = l;
		}

		@Override
		public void onClick(View v) {
			mListener.onClick(v);
		}
	}

	/**
	 * 获得今日日报信息
	 */
	private Map<String, String> getTodayDailyInfo() {
		String username = (String) Session.get("username");
		String key = (String) Session.get("key");
		Map<String, String> dailyInfoMap = null;
		String message = "?funID=" + 4 + "&username=" + username + "&key="+ key;
		try {
			String result=HttpClientUtil.getLoginUser(message);
			System.out.println("result-->"+result);
			dailyInfoMap = HttpClientUtil.dairyTurnToJSon(result);
			 
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return dailyInfoMap;

	}

}
