package com.firstgroup.iflytekdaily.work;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import android.app.Activity;
import android.app.DatePickerDialog;
import android.app.DatePickerDialog.OnDateSetListener;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.BaseExpandableListAdapter;
import android.widget.DatePicker;
import android.widget.ExpandableListView;
import android.widget.ExpandableListView.OnGroupCollapseListener;
import android.widget.ExpandableListView.OnGroupExpandListener;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.firstgroup.iflytekdaily.R;
import com.firstgroup.iflytekdaily.adapter.ExpandListAdapter;
import com.firstgroup.iflytekdaily.util.DateUtil;
import com.firstgroup.iflytekdaily.util.HttpClientUtil;
import com.firstgroup.iflytekdaily.util.Session;

public class ReceivedDaily extends Fragment {
	private List<String> list = new ArrayList<String>();
	private TextView showBeginRece, showEndRece;
	private ImageView chooseBeginRece, chooseEndRece;
	private int yearRece, monthRece, dayRece;
	private BaseExpandableListAdapter adapter;
	private Map<String, String> receivedMap = new HashMap<String, String>();
	private List<Map<String, String>> mapList = new ArrayList<Map<String,String>>();
	List<Map<String, String>> resultLisrList = new ArrayList<Map<String,String>>();
private ExpandableListView listView;
private View TimeView;
private TextView friendlyHint;
	@Override
	public void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		Calendar calendar = Calendar.getInstance();
		yearRece = calendar.get(calendar.YEAR);
		monthRece = calendar.get(calendar.MONTH);
	//	monthRece++;
		dayRece = calendar.get(calendar.DAY_OF_MONTH);
	}
	@Override
	public void onAttach(Activity activity) {
		// TODO Auto-generated method stub
		super.onAttach(activity);
	}
	@Override
	public void onDestroy() {
		// TODO Auto-generated method stub
		super.onDestroy();
	}
	@Override
	public void onPause() {
		// TODO Auto-generated method stub
		super.onPause();
	}
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		View view = inflater.inflate(R.layout.sended_daily_layout, null);
		TimeView = view.findViewById(R.id.show_time_layout);
		friendlyHint = (TextView) view.findViewById(R.id.friendly_hint);
		TextView title = (TextView) view.findViewById(R.id.pager_title);
		title.setText("已接收的日报");
		listView = (ExpandableListView) view
				.findViewById(R.id.expand_sended_daily);
		listView.setGroupIndicator(null);
		showBeginRece = (TextView) view.findViewById(R.id.bagin_time);
		int startDay = dayRece-7;
		int rightMonth = monthRece+1;
		showBeginRece.setText(yearRece+"-"+rightMonth+"-"+startDay);
		showEndRece = (TextView) view.findViewById(R.id.end_time);
		showEndRece.setText(yearRece+"-"+rightMonth+"-"+dayRece);
		chooseBeginRece = (ImageView) view.findViewById(R.id.choose_bagin_day);
		chooseEndRece = (ImageView) view.findViewById(R.id.choose_end_day);
		getReceState();
		
		adapter = new ExpandListAdapter(list, getActivity(), 2, receivedMap);
				
		listView.setAdapter(adapter);
		listView.setOnGroupExpandListener(onGroupExpand);
		listView.setOnGroupCollapseListener(onGroupCollapse);
		chooseBeginRece.setOnClickListener(beginOnClickRece);
		chooseEndRece.setOnClickListener(endOnClickRece);
		
		return view;
	}
	
	private OnClickListener beginOnClickRece = new OnClickListener() {

		@Override
		public void onClick(View v) {
			DatePickerDialog dialog = new DatePickerDialog(getActivity(),
					new OnDateSetListener() {

						@Override
						public void onDateSet(DatePicker view, int year,
								int monthOfYear, int dayOfMonth) {
							monthOfYear++;
							showBeginRece.setText(year + "-" + monthOfYear
									+ "-" + dayOfMonth);

						}
					}, yearRece, monthRece, dayRece);
			dialog.show();
		
		}
	};
	private OnClickListener endOnClickRece = new OnClickListener() {

		@Override
		public void onClick(View v) {
			DatePickerDialog dialog = new DatePickerDialog(getActivity(),
					new OnDateSetListener() {

						@Override
						public void onDateSet(DatePicker view, int year,
								int monthOfYear, int dayOfMonth) {
							monthOfYear++;
							showEndRece.setText(year + "-" + monthOfYear + "-"+ dayOfMonth);
									
							//选定日期  开始更新数据
							getReceState();
							adapter.notifyDataSetChanged();
						}
					}, yearRece, monthRece, dayRece);
			dialog.show();

		}
	};
	/**
	 * 访问网络  来获得日期和日报填写状态
	 */
	private void getReceState() {
		String userName = (String)Session.get("username");
		String key = (String)Session.get("key");
		String startDate = showBeginRece.getText().toString();
		String endDate = showEndRece.getText().toString();
	System.out.println("qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq");
		int count = DateUtil.subDays(endDate, startDate);
		if (count>0) {
		String parameters =  "?"+"funID=6&"+"username="+userName+"&startDate="+startDate+"&endDate="+endDate+"&count="+count+"&key="+key;
		System.out.println("par:"+parameters);
		String result = "";
		String[] strings = {};
		mapList.clear();
		list.clear();
		resultLisrList.clear();
		try {
			result = HttpClientUtil.getLoginUser(parameters);
			System.out.println("收到的日报集合333232："+result);
			
			resultLisrList = HttpClientUtil.dairyReportSetTurnToJSon(result);
			System.out.println("list的大小："+resultLisrList.size());
			friendlyHint.setVisibility(View.GONE);
			if (resultLisrList.size()==0) {
				friendlyHint.setVisibility(View.VISIBLE);
				friendlyHint.setText("这几天没收到日报!");
				
			}
			for (Map<String, String> map2 : resultLisrList) {
				mapList.add(map2);
				System.out.println("map的大小:"+map2.size() );
					strings = map2.get("SendTime").split("T");
					System.out.println("values:"+strings[0]+"#"+ map2.get("WriterName"));
				list.add(strings[0]+"#"+ map2.get("WriterName"));
				
			}
		} catch (Exception e) {
			
			e.printStackTrace();
		}
	}else {
		friendlyHint.setVisibility(View.GONE);
		Toast.makeText(getActivity(), "请正确选择显示日期"+count, Toast.LENGTH_LONG).show();
	}
	}
	private OnGroupExpandListener onGroupExpand = new OnGroupExpandListener() {
		
		@Override
		public void onGroupExpand(int groupPosition) {
			for (int i = 0; i < listView.getCount(); i++) {
				if (i!=groupPosition) {
					listView.collapseGroup(i);
				}
			}
			receivedMap.clear();
			receivedMap.putAll(mapList.get(groupPosition));
			adapter.notifyDataSetChanged();
			TimeView.setVisibility(View.GONE);
			
		}
	};
	private OnGroupCollapseListener onGroupCollapse = new OnGroupCollapseListener() {
		
		@Override
		public void onGroupCollapse(int groupPosition) {
			TimeView.setVisibility(View.VISIBLE);
			
		}
	};

}
